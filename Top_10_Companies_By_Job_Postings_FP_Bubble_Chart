import csv
import heapq
import plotly.graph_objects as go

def read_salaries(company):
    with open('FinalJobDataUpdated.csv', mode='r') as csv_file:
        csv_reader = csv.DictReader(csv_file)
        salaries = []
        for row in csv_reader:
            if row['Company Name'] == company:
                try:
                    salary = float(row['Yearly Max'])
                    salaries.append(salary)
                except ValueError:
                    pass
        if not salaries:
            return None
        return salaries

company_count = {}
with open('FinalJobDataUpdated.csv', mode='r') as csv_file:
    csv_reader = csv.DictReader(csv_file)

    for row in csv_reader:
        company_name = row['Company Name']
        if company_name:
            company_count[company_name] = company_count.get(company_name, 0) + 1

    # Find the top 10 companies with the most job postings
    top_companies = []
    for company, count in heapq.nlargest(1000, company_count.items(), key=lambda x: x[1]):
        if company and len(top_companies) < 10:
            salaries = read_salaries(company)
            if salaries is not None:
                top_companies.append((company, count, salaries))
        elif len(top_companies) == 10:
            break

    # Create a dictionary to hold the top 10 companies' salary information
    top_salaries = {}

    # Loop through the top 10 companies and extract their salary data
    for company, count, salaries in top_companies:
        top_salaries[company] = salaries

    # Calculate the average of the top 10 companies' salaries
    averages = {company: sum(salaries) / len(salaries) for company, salaries in top_salaries.items()}

    # Create a bubble chart of the top 10 companies' average salaries
    fig = go.Figure()
    for company, avg_salary in averages.items():
        fig.add_trace(go.Scatter(x=[company_count[company]], y=[avg_salary],
                                 mode='markers', marker_size=avg_salary / 10000, name=company))

    fig.update_layout(title='Top 10 Companies by Job Postings and Their Average Salaries',
                      xaxis_title='Number of Job Postings', yaxis_title='Average Salary ($)')

    fig.show()
